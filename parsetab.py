
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BINOPS BOOLEANS CHARACTER COMA DIGIT ELSE IF IN LEFTPAREN LET MAP PRIMWORDS RIGHTPAREN SEMICOLON SIGNS THEN TO WAVE\n    Exp : Term Binop Exp\n    | Term\n    | IF Exp THEN Exp ELSE Exp\n    | LET DefPlus IN Exp\n    | MAP IdList TO Exp\n    \n    Term : Bool\n         | Unop Term\n         | Factor LEFTPAREN ExpList RIGHTPAREN\n         | Factor\n         | Int\n         | empty\n    \n    Factor : LEFTPAREN Exp RIGHTPAREN\n           | Prim\n           | Id\n    \n    ExpList : PropExpList\n            | empty\n    \n    PropExpList : Exp COMA PropExpList\n                | Exp\n    \n    IdList : PropIdList\n           | empty\n    \n    PropIdList : Id COMA PropIdList\n               | Id\n    \n    Def : Id ASSIGN Exp SEMICOLON\n    \n    DefPlus : DefPlus Def\n            | Def\n    \n    Bool : BOOLEANS\n    \n    Unop : Sign\n         | WAVE\n    \n    Sign : SIGNS\n    \n    Binop : Sign\n          | BINOPS\n    \n    Prim : PRIMWORDS\n    \n    Id : CHARACTER Chagit\n       | CHARACTER\n    \n    Chagit : Chagit CHARACTER\n           | Chagit DIGIT\n           | CHARACTER\n           | DIGIT\n           | empty\n    \n    Int : DigitPlus\n    \n    DigitPlus : DIGIT DigitPlus\n              | DIGIT\n    \n    empty :\n    '
    
_lr_action_items = {'IF':([0,3,9,18,22,23,24,34,42,43,45,46,61,62,],[3,3,3,-29,3,-30,-31,3,3,3,3,3,3,3,]),'LET':([0,3,9,18,22,23,24,34,42,43,45,46,61,62,],[4,4,4,-29,4,-30,-31,4,4,4,4,4,4,4,]),'MAP':([0,3,9,18,22,23,24,34,42,43,45,46,61,62,],[5,5,5,-29,5,-30,-31,5,5,5,5,5,5,5,]),'BOOLEANS':([0,3,7,9,13,14,18,22,23,24,34,42,43,45,46,61,62,],[12,12,12,12,-27,-28,-29,12,-30,-31,12,12,12,12,12,12,12,]),'WAVE':([0,3,7,9,13,14,18,22,23,24,34,42,43,45,46,61,62,],[14,14,14,14,-27,-28,-29,14,-30,-31,14,14,14,14,14,14,14,]),'LEFTPAREN':([0,3,7,8,9,13,14,15,16,18,19,20,22,23,24,34,36,37,38,39,42,43,45,46,52,53,54,61,62,],[9,9,9,34,9,-27,-28,-13,-14,-29,-32,-34,9,-30,-31,9,-37,-33,-38,-39,9,9,9,9,-12,-35,-36,9,9,]),'BINOPS':([0,2,3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,33,34,36,37,38,39,40,42,43,45,46,50,52,53,54,60,61,62,],[-43,24,-43,-6,-43,-9,-43,-10,-11,-26,-27,-28,-13,-14,-40,-29,-32,-34,-42,-43,-30,-31,-7,-43,-37,-33,-38,-39,-41,-43,-43,-43,-43,-11,-12,-35,-36,-8,-43,-43,]),'SIGNS':([0,2,3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,33,34,36,37,38,39,40,42,43,45,46,50,52,53,54,60,61,62,],[18,18,18,-6,18,-9,18,-10,-11,-26,-27,-28,-13,-14,-40,-29,-32,-34,-42,18,-30,-31,-7,18,-37,-33,-38,-39,-41,18,18,18,18,-11,-12,-35,-36,-8,18,18,]),'$end':([0,1,2,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,33,36,37,38,39,40,41,43,46,52,53,54,56,58,60,62,65,],[-43,0,-2,-6,-43,-9,-10,-11,-26,-27,-28,-13,-14,-40,-29,-32,-34,-42,-43,-30,-31,-7,-37,-33,-38,-39,-41,-1,-43,-43,-12,-35,-36,-4,-5,-8,-43,-3,]),'PRIMWORDS':([0,3,7,9,13,14,18,22,23,24,34,42,43,45,46,61,62,],[19,19,19,19,-27,-28,-29,19,-30,-31,19,19,19,19,19,19,19,]),'CHARACTER':([0,3,4,5,7,9,13,14,18,20,22,23,24,26,27,34,36,37,38,39,42,43,44,45,46,47,53,54,61,62,63,],[20,20,20,20,20,20,-27,-28,-29,36,20,-30,-31,20,-25,20,-37,53,-38,-39,20,20,-24,20,20,20,-35,-36,20,20,-23,]),'DIGIT':([0,3,7,9,13,14,18,20,21,22,23,24,34,36,37,38,39,42,43,45,46,53,54,61,62,],[21,21,21,21,-27,-28,-29,38,21,21,-30,-31,21,-37,54,-38,-39,21,21,21,21,-35,-36,21,21,]),'THEN':([2,3,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,33,36,37,38,39,40,41,43,46,52,53,54,56,58,60,62,65,],[-2,-43,-6,-43,-9,-10,-11,-26,-27,-28,-13,-14,-40,-29,-32,-34,-42,-43,-30,-31,42,-7,-37,-33,-38,-39,-41,-1,-43,-43,-12,-35,-36,-4,-5,-8,-43,-3,]),'RIGHTPAREN':([2,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,33,34,35,36,37,38,39,40,41,43,46,48,49,50,51,52,53,54,56,58,60,61,62,64,65,],[-2,-6,-43,-9,-43,-10,-11,-26,-27,-28,-13,-14,-40,-29,-32,-34,-42,-43,-30,-31,-7,-43,52,-37,-33,-38,-39,-41,-1,-43,-43,60,-15,-11,-18,-12,-35,-36,-4,-5,-8,-43,-43,-17,-3,]),'COMA':([2,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,32,33,34,36,37,38,39,40,41,43,46,50,51,52,53,54,56,58,60,61,62,65,],[-2,-6,-43,-9,-10,-11,-26,-27,-28,-13,-14,-40,-29,-32,-34,-42,-43,-30,-31,47,-7,-43,-37,-33,-38,-39,-41,-1,-43,-43,-11,61,-12,-35,-36,-4,-5,-8,-43,-43,-3,]),'ELSE':([2,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,33,36,37,38,39,40,41,42,43,46,52,53,54,55,56,58,60,62,65,],[-2,-6,-43,-9,-10,-11,-26,-27,-28,-13,-14,-40,-29,-32,-34,-42,-43,-30,-31,-7,-37,-33,-38,-39,-41,-1,-43,-43,-43,-12,-35,-36,62,-4,-5,-8,-43,-3,]),'SEMICOLON':([2,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,33,36,37,38,39,40,41,43,45,46,52,53,54,56,57,58,60,62,65,],[-2,-6,-43,-9,-10,-11,-26,-27,-28,-13,-14,-40,-29,-32,-34,-42,-43,-30,-31,-7,-37,-33,-38,-39,-41,-1,-43,-43,-43,-12,-35,-36,-4,63,-5,-8,-43,-3,]),'TO':([5,20,29,30,31,32,36,37,38,39,53,54,59,],[-43,-34,46,-19,-20,-22,-37,-33,-38,-39,-35,-36,-21,]),'ASSIGN':([20,28,36,37,38,39,53,54,],[-34,45,-37,-33,-38,-39,-35,-36,]),'IN':([26,27,44,63,],[43,-25,-24,-23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Exp':([0,3,9,22,34,42,43,45,46,61,62,],[1,25,35,41,51,55,56,57,58,51,65,]),'Term':([0,3,7,9,22,34,42,43,45,46,61,62,],[2,2,33,2,2,2,2,2,2,2,2,2,]),'Bool':([0,3,7,9,22,34,42,43,45,46,61,62,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'Unop':([0,3,7,9,22,34,42,43,45,46,61,62,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'Factor':([0,3,7,9,22,34,42,43,45,46,61,62,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'Int':([0,3,7,9,22,34,42,43,45,46,61,62,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'empty':([0,3,5,7,9,20,22,34,42,43,45,46,61,62,],[11,11,31,11,11,39,11,50,11,11,11,11,11,11,]),'Sign':([0,2,3,7,9,22,34,42,43,45,46,61,62,],[13,23,13,13,13,13,13,13,13,13,13,13,13,]),'Prim':([0,3,7,9,22,34,42,43,45,46,61,62,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'Id':([0,3,4,5,7,9,22,26,34,42,43,45,46,47,61,62,],[16,16,28,32,16,16,16,28,16,16,16,16,16,32,16,16,]),'DigitPlus':([0,3,7,9,21,22,34,42,43,45,46,61,62,],[17,17,17,17,40,17,17,17,17,17,17,17,17,]),'Binop':([2,],[22,]),'DefPlus':([4,],[26,]),'Def':([4,26,],[27,44,]),'IdList':([5,],[29,]),'PropIdList':([5,47,],[30,59,]),'Chagit':([20,],[37,]),'ExpList':([34,],[48,]),'PropExpList':([34,61,],[49,64,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Exp","S'",1,None,None,None),
  ('Exp -> Term Binop Exp','Exp',3,'p_Exp','A2parser.py',8),
  ('Exp -> Term','Exp',1,'p_Exp','A2parser.py',9),
  ('Exp -> IF Exp THEN Exp ELSE Exp','Exp',6,'p_Exp','A2parser.py',10),
  ('Exp -> LET DefPlus IN Exp','Exp',4,'p_Exp','A2parser.py',11),
  ('Exp -> MAP IdList TO Exp','Exp',4,'p_Exp','A2parser.py',12),
  ('Term -> Bool','Term',1,'p_Term','A2parser.py',19),
  ('Term -> Unop Term','Term',2,'p_Term','A2parser.py',20),
  ('Term -> Factor LEFTPAREN ExpList RIGHTPAREN','Term',4,'p_Term','A2parser.py',21),
  ('Term -> Factor','Term',1,'p_Term','A2parser.py',22),
  ('Term -> Int','Term',1,'p_Term','A2parser.py',23),
  ('Term -> empty','Term',1,'p_Term','A2parser.py',24),
  ('Factor -> LEFTPAREN Exp RIGHTPAREN','Factor',3,'p_Factor','A2parser.py',29),
  ('Factor -> Prim','Factor',1,'p_Factor','A2parser.py',30),
  ('Factor -> Id','Factor',1,'p_Factor','A2parser.py',31),
  ('ExpList -> PropExpList','ExpList',1,'p_ExpList','A2parser.py',38),
  ('ExpList -> empty','ExpList',1,'p_ExpList','A2parser.py',39),
  ('PropExpList -> Exp COMA PropExpList','PropExpList',3,'p_PropExpList','A2parser.py',45),
  ('PropExpList -> Exp','PropExpList',1,'p_PropExpList','A2parser.py',46),
  ('IdList -> PropIdList','IdList',1,'p_IdList','A2parser.py',52),
  ('IdList -> empty','IdList',1,'p_IdList','A2parser.py',53),
  ('PropIdList -> Id COMA PropIdList','PropIdList',3,'p_PropIdList','A2parser.py',59),
  ('PropIdList -> Id','PropIdList',1,'p_PropIdList','A2parser.py',60),
  ('Def -> Id ASSIGN Exp SEMICOLON','Def',4,'p_Def','A2parser.py',66),
  ('DefPlus -> DefPlus Def','DefPlus',2,'p_DefPlus','A2parser.py',72),
  ('DefPlus -> Def','DefPlus',1,'p_DefPlus','A2parser.py',73),
  ('Bool -> BOOLEANS','Bool',1,'p_Bool','A2parser.py',80),
  ('Unop -> Sign','Unop',1,'p_Unop','A2parser.py',87),
  ('Unop -> WAVE','Unop',1,'p_Unop','A2parser.py',88),
  ('Sign -> SIGNS','Sign',1,'p_Sign','A2parser.py',95),
  ('Binop -> Sign','Binop',1,'p_Binop','A2parser.py',101),
  ('Binop -> BINOPS','Binop',1,'p_Binop','A2parser.py',102),
  ('Prim -> PRIMWORDS','Prim',1,'p_Prim','A2parser.py',108),
  ('Id -> CHARACTER Chagit','Id',2,'p_Id','A2parser.py',115),
  ('Id -> CHARACTER','Id',1,'p_Id','A2parser.py',116),
  ('Chagit -> Chagit CHARACTER','Chagit',2,'p_Chagit','A2parser.py',123),
  ('Chagit -> Chagit DIGIT','Chagit',2,'p_Chagit','A2parser.py',124),
  ('Chagit -> CHARACTER','Chagit',1,'p_Chagit','A2parser.py',125),
  ('Chagit -> DIGIT','Chagit',1,'p_Chagit','A2parser.py',126),
  ('Chagit -> empty','Chagit',1,'p_Chagit','A2parser.py',127),
  ('Int -> DigitPlus','Int',1,'p_Int','A2parser.py',133),
  ('DigitPlus -> DIGIT DigitPlus','DigitPlus',2,'p_Digit','A2parser.py',140),
  ('DigitPlus -> DIGIT','DigitPlus',1,'p_Digit','A2parser.py',141),
  ('empty -> <empty>','empty',0,'p_empty','A2parser.py',147),
]
